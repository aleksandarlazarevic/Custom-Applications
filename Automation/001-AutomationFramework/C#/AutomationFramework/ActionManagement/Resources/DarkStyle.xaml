<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Color x:Key="LightBackground">#37505E</Color>
    <Color x:Key="DarkBackground">#1A2E37</Color>
    <Color x:Key="ForegroundColor">#DFEBF3</Color>
    <Color x:Key="CommonControlBackground">#3776A1</Color>
    <Color x:Key="CommonControlForeground">#FFFFFF</Color>
    <Color x:Key="CommonControlDisabledBackground">#265470</Color>
    <Color x:Key="CommonControlDisabledForeground">#8C989E</Color>

    <Color x:Key="LogBackground">#0C1A20</Color>
    <Color x:Key="LogForeground">#E2B2FF</Color>

    <Color x:Key="Checkbox">#50A4BC</Color>

    <Color x:Key="Separator">#28536F</Color>

    <Color x:Key="SeparatorLineColor">#ff4b6473</Color>

    <Color x:Key="AMBrightBlue">#A0C5E9</Color>
    <SolidColorBrush x:Key="AMBrightBlueBrush" Color="{StaticResource AMBrightBlue}" />

    <Color x:Key="AMPink">#EC528B</Color>
    <SolidColorBrush x:Key="AMPinkBrush" Color="{StaticResource AMPink}" />

    <Style TargetType="{x:Type Window}">
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Color x:Key="LeftPaneMenuSelection">#0D1A20</Color>
    <Color x:Key="LeftPaneMenuHighlighted">#FC5D68</Color>
    <SolidColorBrush x:Key="LeftPaneBackground" Color="{StaticResource LightBackground}"/>
    <SolidColorBrush x:Key="LeftPaneForeground" Color="{StaticResource ForegroundColor}"/>

    <Color x:Key="RedButtonBackground">#C52646</Color>
    <Color x:Key="GreenButtonBackground">#1C7182</Color>
    <Color x:Key="RedButtonShadowBackground">#961D37</Color>
    <Color x:Key="GreenButtonShadowBackground">#164B66</Color>

    <SolidColorBrush x:Key="RightPaneBackground" Color="{StaticResource DarkBackground}"/>
    <SolidColorBrush x:Key="RightPaneForeground" Color="{StaticResource ForegroundColor}"/>
    <Color x:Key="RightPaneTitlesAndSelectedText">#FFFFFF</Color>
    <Color x:Key="RightPaneDisabledText">#79878E</Color>

    <SolidColorBrush x:Key="LogPaneBackground" Color="{StaticResource LogBackground}"/>
    <SolidColorBrush x:Key="LogPaneForeground" Color="{StaticResource LogForeground}"/>

    <!--Buttons-->
    <SolidColorBrush x:Key="RoundButtonBackground" Color="{StaticResource CommonControlBackground}"/>
    <SolidColorBrush x:Key="RoundButtonForeground" Color="{StaticResource CommonControlForeground}"/>
    <SolidColorBrush x:Key="RedRoundButtonBackground" Color="{StaticResource RedButtonBackground}"/>
    <SolidColorBrush x:Key="GreenRoundButtonBackground" Color="{StaticResource GreenButtonBackground}"/>

    <SolidColorBrush x:Key="RoundButtonDisabledBackground" Color="{StaticResource CommonControlDisabledBackground}"/>
    <SolidColorBrush x:Key="RoundButtonDisabledForeground" Color="{StaticResource CommonControlDisabledForeground}"/>
    <SolidColorBrush x:Key="RedRoundButtonShadowBackground" Color="{StaticResource RedButtonShadowBackground}"/>
    <SolidColorBrush x:Key="GreenRoundButtonShadowBackground" Color="{StaticResource GreenButtonShadowBackground}"/>

    <SolidColorBrush x:Key="MenuButtonBackground" Color="{StaticResource LightBackground}"/>
    <SolidColorBrush x:Key="MenuButtonForeground" Color="{StaticResource CommonControlForeground}"/>
    <SolidColorBrush x:Key="MenuButtonPressedBackground" Color="{StaticResource LeftPaneMenuSelection}"/>

    <SolidColorBrush x:Key="SeparatorLineColorBrush" Color="{StaticResource SeparatorLineColor}" />

    <Style TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource RoundButtonForeground}" />
        <Setter Property="Padding" Value="16,7" />
        <Setter Property="Height" Value="auto" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="6" BorderBrush="{StaticResource RoundButtonBackground}" BorderThickness="1">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource CommonControlBackground}"/>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#00000000" Offset="1"/>
                                        <GradientStop Color="#FF303030" Offset="0.3"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            <Setter Property="Background" Value="{StaticResource RoundButtonDisabledBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource RoundButtonDisabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RedRoundButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource RoundButtonForeground}" />
        <Setter Property="Padding" Value="16,7" />
        <Setter Property="Height" Value="auto" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="6" BorderBrush="{StaticResource RedRoundButtonBackground}" BorderThickness="1">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource RedButtonBackground}"/>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#00000000" Offset="1"/>
                                        <GradientStop Color="#961D37" Offset="0.3"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource RedButtonShadowBackground}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource RedButtonShadowBackground}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            <Setter Property="Background" Value="{StaticResource RoundButtonDisabledBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource RoundButtonDisabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GreenRoundButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource RoundButtonForeground}" />
        <Setter Property="Padding" Value="16,7" />
        <Setter Property="Height" Value="auto" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="6" BorderBrush="{StaticResource GreenRoundButtonBackground}" BorderThickness="1">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource GreenButtonBackground}"/>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#00000000" Offset="1"/>
                                        <GradientStop Color="#165B66" Offset="0.3"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource GreenButtonShadowBackground}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource GreenButtonShadowBackground}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            <Setter Property="Background" Value="{StaticResource RoundButtonDisabledBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource RoundButtonDisabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LeftMenuButton"  
           BasedOn="{StaticResource {x:Type Button}}" 
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" BorderBrush="{StaticResource MenuButtonBackground}" BorderThickness="1">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource LightBackground}"/>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource LeftPaneMenuSelection}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource LeftPaneMenuSelection}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource LeftPaneMenuSelection}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LogButton"  
           BasedOn="{StaticResource {x:Type Button}}" 
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" BorderBrush="{StaticResource MenuButtonBackground}" BorderThickness="1">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource LightBackground}"/>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource LeftPaneMenuSelection}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource LeftPaneMenuSelection}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            <Setter Property="Background" Value="{StaticResource RoundButtonDisabledBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource RoundButtonDisabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CloseButton" 
        BasedOn="{StaticResource {x:Type Button}}" 
        TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#00000000" Offset="1"/>
                                        <GradientStop Color="#FF303030" Offset="0.3"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource AMPinkBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="WindowControlButton">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource AMBrightBlueBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Window Close Button -->
    <Style TargetType="{x:Type Button}" x:Key="WindowCloseButton" BasedOn="{StaticResource WindowControlButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource AMPinkBrush}" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <SolidColorBrush x:Key="CommonForeground" Color="{StaticResource CommonControlForeground}"/>

    <SolidColorBrush x:Key="CheckBoxColor" Color="{StaticResource Checkbox}"/>

    <!--Comboboxes-->
    <SolidColorBrush x:Key="DropdownMenuBackground" Color="{StaticResource CommonControlBackground}"/>
    <SolidColorBrush x:Key="DropdownMenuForeground" Color="{StaticResource CommonControlForeground}"/>
    <SolidColorBrush x:Key="DropdownMenuDisabledBackground" Color="{StaticResource CommonControlDisabledBackground}"/>
    <SolidColorBrush x:Key="DropdownMenuDisabledForeground" Color="{StaticResource CommonControlDisabledForeground}"/>

    <Style x:Key="DropdownMenu" TargetType="{x:Type ComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                            <ToggleButton.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="5*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="Border"  Grid.ColumnSpan="2" CornerRadius="5" Background="{StaticResource DropdownMenuBackground}" BorderBrush="{StaticResource DropdownMenuBackground}" BorderThickness="1" />
                                        <Border Grid.Column="0" CornerRadius="5,0,0,5"  Margin="1"  Background="{StaticResource DropdownMenuBackground}"  BorderBrush="{StaticResource DropdownMenuBackground}" BorderThickness="0,0,1,0" />
                                        <Path x:Name="Arrow" Grid.Column="1" Margin="18,0,5,0" Fill="{StaticResource DropdownMenuForeground}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ToggleButton.IsEnabled" Value="false">
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DropdownMenuDisabledBackground}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="10, 3, 18, 3" HorizontalAlignment="Left"/>
                        <TextBox x:Name="PartEditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                            <Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" Width="Auto" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="{StaticResource DropdownMenuBackground}" />
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="Auto"></Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DropdownMenuDisabledBackground}"/>
                <Setter Property="Foreground" Value="{StaticResource DropdownMenuDisabledForeground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Checkboxes-->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Padding" Value="4,0,0,3"/>
        <Setter Property="Background" Value="{StaticResource RightPaneBackground}"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckBoxColor}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{StaticResource CheckBoxColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="container">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="23"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To=".55"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="content" />
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="disabled" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="check" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="IndeterminateCheck" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"  
                                    Width="20" Height="20"/>
                            <Rectangle x:Name="IndeterminateCheck"
                                       Fill="{StaticResource RoundButtonDisabledBackground}"
                                       Height="3"
                                       Width="6"
                                       Opacity="0" />
                            <Viewbox x:Name="check" Opacity="0" Margin="4">
                                <Path Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z" Stretch="Fill" Width="10" Height="8" Fill="{StaticResource CheckBoxColor}"/>
                            </Viewbox>
                            <Border x:Name="disabled"
                                    Opacity="0"
                                    Background="{StaticResource RightPaneBackground}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource RoundButtonDisabledForeground}"
                                    Width="20"
                                    Height="20" />
                        </Grid>

                        <ContentPresenter x:Name="content" TextBlock.Foreground="{TemplateBinding Foreground}" Grid.Column="1" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RichTextBox}">
        <Setter Property="Background" Value="{StaticResource LogPaneBackground}"/>
        <!--<Setter Property="Foreground" Value="{StaticResource LogPaneForeground}"/>-->
    </Style>

    <!--A Style that affects all TextBlocks-->
    <Style TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <!--A Style that extends the previous TextBlock Style with an x:Key of TitleText-->
    <Style BasedOn="{StaticResource {x:Type TextBlock}}"
           TargetType="TextBlock"
           x:Key="TitleText">
        <Setter Property="FontSize" Value="26"/>
        <Setter Property="Foreground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Offset="0.0" Color="#90DDDD" />
                        <GradientStop Offset="1.0" Color="#5BFFFF" />
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type StackPanel}" x:Key="RightPanel">
        <Setter Property="Background" Value="{StaticResource RightPaneBackground}" />
    </Style>
    <Style TargetType="{x:Type StackPanel}" 
           x:Key="NavigationBar">
        <Setter Property="Background" Value="{StaticResource LeftPaneBackground}"></Setter>
    </Style>

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="TabStripPlacement" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
</ResourceDictionary>